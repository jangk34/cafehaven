<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- JAVA와 연결할 Mapper 파일 설정 -->
<mapper namespace="poly.persistance.mapper.UserMapper">

	<!-- 회원 가입 -->
	<insert id="insertUser" parameterType="UserDTO">
		INSERT INTO USER_CAFE
		(
		USER_NO,
		EMAIL,
		PASSWORD,
		PWDQ,
		PWDA,
		GENDER,
		NAME,
		BIRTH,
		USER_TEL,
		POST_ADDR,
		ADDR1,
		ADDR2,
		REGDATE,
		REGNO
		)
		VALUES
		(
		USER_NO.NEXTVAL,
		#{email},
		#{password},
		#{pwdQ},
		#{pwdA},
		#{gender},
		#{name},
		#{birth},
		#{userTel},
		#{postAddr},
		#{addr1},
		#{addr2},
		SYSDATE,
		USER_NO.NEXTVAL
		)
	</insert>
	<!-- 회원목록 -->
	<select id="getUserList" resultType="UserDTO">
	SELECT USER_NO AS "USERNO",
		EMAIL,
		PASSWORD,
		PWDQ,
		PWDA,
		GENDER,
		NAME,
		BIRTH,
		POST_ADDR AS "POSTADDR",
		ADDR1,
		ADDR2,
		REGDATE,
		REGNO,
		USER_TEL AS "USERTEL"
	FROM USER_CAFE
	</select>
	
	<!-- 회원상세 -->
	<select id="getUserDetail" parameterType="string" resultType="UserDTO"><!--  객체가 넘어오느냐 스트링이 넘어오느냐 판단뒤 객체는 객체안에 멤버변수  넘겨오는거에따라  적으면됨 #{ } -->
	SELECT USER_NO AS "USERNO",
		EMAIL,
		PASSWORD,
		PWDQ,
		PWDA,
		GENDER,
		NAME,
		BIRTH,
		POST_ADDR AS "POSTADDR",
		ADDR1,
		ADDR2,
		REGDATE,
		REGNO
	FROM USER_CAFE
	WHERE USER_NO=#{userNo}  
	</select>
	<!--  이메일중복체크 -->
	<select id="getUserEmailCheck" parameterType="string" resultType="int">
	SELECT COUNT(*)
	FROM USER_CAFE
	WHERE EMAIL=#{email}
	</select>
	
	<!--  회원삭제 -->
	<delete id="deleteUser" parameterType="string">
	DELETE FROM USER_CAFE
	WHERE USER_NO=#{userNo}
	</delete>
	<!-- 회원로그인  조건은 이메일과 패스워드가 일치-->
	<select id="getUserLogin" parameterType="UserDTO" resultType="UserDTO">
	SELECT USER_NO AS "USERNO",
	EMAIL,
	PASSWORD,
	PWDQ,
	PWDA,
	GENDER,
	NAME,
	BIRTH,
	POST_ADDR AS "POSTADDR",
	ADDR1,
	ADDR2,
	REGDATE,
	REGNO,
	USER_TEL AS "USERTEL"
	FROM USER_CAFE
	WHERE EMAIL=#{email} AND PASSWORD=#{password}
	</select>
	<!--  아이디 찾기 -->
	<select id ="getEmailFind" parameterType="UserDTO" resultType="UserDTO">
	SELECT EMAIL,NAME
	FROM USER_CAFE
	WHERE NAME=#{name} AND BIRTH=#{birth} AND GENDER=#{gender} AND USER_TEL=#{userTel}
	</select>
<!-- 	 비밀번호찾기 
	<select id ="getPwFind" parameterType="UserDTO" resultType="UserDTO">
	SELECT PASSWORD,NAME
	FROM USER_CAFE 
	WHERE EMAIL=#{email} AND PWDQ=#{pwdQ} AND PWDA=#{pwdA}
	</select> -->
	
	<!--  임시비밀번호 -->
	<update id="updateTmpPass" parameterType="UserDTO">
	UPDATE
		USER_CAFE
	SET
		PASSWORD = #{password}
	WHERE
		EMAIL=#{email} AND NAME=#{name}
 	</update>
 	
 	<!-- ㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇㅇ유라 -->
 	
	
	
	<update id="updateUser" parameterType="UserDTO">
	UPDATE USER_CAFE
	SET EMAIL=#{email},
		NAME=#{name},
		USER_TEL=#{userTel},
		POST_ADDR=#{postAddr},
		ADDR1=#{addr1},
		ADDR2=#{addr2}
	WHERE USER_NO = #{userNo}
	</update>
</mapper>